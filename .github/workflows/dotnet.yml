name: Core

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "V1" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: Project\FW4di.Dotnet.Core.sln
      Test_Project_Path: Project\FW4di.Dotnet.Core.Tests\FW4di.Dotnet.Core.Tests.csproj
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET
    - name: Install .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      
    # Setup NuGet.exe
    - name: Setup NuGet.exe for use with action
      uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NuGetAPIKey }}
        nuget-version: '5.x'
        run: nuget restore Solution_Name
    
    # Restore projects for NuGet
    - name: Restore NuGet on Core.Tests
      run: dotnet restore Project\FW4di.Dotnet.Core.Tests\FW4di.Dotnet.Core.Tests.csproj
      
    - name: Restore NuGet on Core
      run: dotnet restore Project\FW4di.Dotnet.Core\FW4di.Dotnet.Core.csproj
      
    # Build the solution
    - name: Build
      run: msbuild -m $env:Solution_Name /property:Configuration=${{ matrix.configuration }}
        
    # Add vstest to the PATH
    - name: Setup VSTest Path
      uses: Malcolmnixon/Setup-VSTest@v4
      
    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: vstest.console.exe Project\FW4di.Dotnet.Core.Tests\bin\${{ matrix.configuration }}\net9.0\FW4di.Dotnet.Core.Tests.dll
    
